!TITLE,'Test input for PTC_TWISS';

!=========== RING PARAMETERS ===========================================
call, file = "../ring_lattice/ring.seq";


! At the end of the ring the data_block is produced

SAVEBETA, label=TWSSip, place=#E,sequence=fivecell;

select,flag=twiss,column=name,s,betx,bety,dx,dy;

TWISS,file=twiss_madx_ring; 

SHOW,TWSSip;     ! SHOW parameters (see "*.out" file)


! Initialize PTC
ptc_create_universe;
ptc_create_layout,model=2,method=6,nst=10,exact;
! removed the following on November 1st 2009
!ptc_align;

select,flag=ptc_twiss,column=name,s,beta11,beta21,
                                  beta12,beta22,disp1,disp3,x,px,y,py;

ptc_twiss,closed_orbit,icase=5,file=twiss_ptc_ring,no=4;

PTC_NORMAL,closed_orbit,maptable,icase=5,no=4;

ptc_end;

!write,table="map_table",file="map_table";
write,table="map_table",file="ring_matrix_at_end";

!=========== TRANSFER-LINE PARAMETERS ==================================== 

call, file = "../line_lattice/line.seq";

select,flag=ptc_twiss,clear;
select,flag=ptc_twiss,column=name,s,beta11,beta21,beta12,beta22,disp1,disp3;

! first inject a betablock and check that we recover the twiss file for the line
ptc_create_universe;
ptc_create_layout,model=2,method=6,nst=5,exact;
ptc_twiss,icase=5,no=1,BETA0=TWSSip,file=twiss_ptc_line_beta0;
ptc_end;

! secondly inject the map stored in stored fort.18
ptc_create_universe;
ptc_create_layout,model=2,method=6,nst=5,exact;
ptc_twiss,icase=5,no=4,initial_map_manual,file=twiss_ptc_line_fort18;
ptc_end;


stop;
