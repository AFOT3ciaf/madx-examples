%!PS-Adobe-2.0
%%Title: out_tstTrack_syn.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Wed Jul 15 16:28:23 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1050 420 M
4200 0 V
1.000 UL
LTb
1050 420 M
63 0 V
4137 0 R
-63 0 V
stroke
966 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (-3e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 802 M
4200 0 V
1.000 UL
LTb
1050 802 M
63 0 V
4137 0 R
-63 0 V
stroke
966 802 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2.5e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 1184 M
4200 0 V
1.000 UL
LTb
1050 1184 M
63 0 V
4137 0 R
-63 0 V
stroke
966 1184 M
[ [(Helvetica) 140.0 0.0 true true 0 (-2e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 1565 M
4200 0 V
1.000 UL
LTb
1050 1565 M
63 0 V
4137 0 R
-63 0 V
stroke
966 1565 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1.5e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 1947 M
4200 0 V
1.000 UL
LTb
1050 1947 M
63 0 V
4137 0 R
-63 0 V
stroke
966 1947 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 2329 M
4200 0 V
1.000 UL
LTb
1050 2329 M
63 0 V
4137 0 R
-63 0 V
stroke
966 2329 M
[ [(Helvetica) 140.0 0.0 true true 0 (-5e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 2711 M
4200 0 V
1.000 UL
LTb
1050 2711 M
63 0 V
4137 0 R
-63 0 V
stroke
966 2711 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 3093 M
4200 0 V
1.000 UL
LTb
1050 3093 M
63 0 V
4137 0 R
-63 0 V
stroke
966 3093 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5e-06)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 3475 M
4200 0 V
1.000 UL
LTb
1050 3475 M
63 0 V
4137 0 R
-63 0 V
stroke
966 3475 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 3856 M
4200 0 V
1.000 UL
LTb
1050 3856 M
63 0 V
4137 0 R
-63 0 V
stroke
966 3856 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 4238 M
4200 0 V
1.000 UL
LTb
1050 4238 M
63 0 V
4137 0 R
-63 0 V
stroke
966 4238 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 4620 M
4200 0 V
1.000 UL
LTb
1050 4620 M
63 0 V
4137 0 R
-63 0 V
stroke
966 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5e-05)]
] -46.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1050 420 M
0 4200 V
1.000 UL
LTb
1050 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1050 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.008)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1517 420 M
0 4200 V
1.000 UL
LTb
1517 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1517 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.006)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
1983 420 M
0 4200 V
1.000 UL
LTb
1983 420 M
0 63 V
0 4137 R
0 -63 V
stroke
1983 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.004)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2450 420 M
0 4200 V
1.000 UL
LTb
2450 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2450 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.002)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2917 420 M
0 4200 V
1.000 UL
LTb
2917 420 M
0 63 V
0 4137 R
0 -63 V
stroke
2917 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3383 420 M
0 4200 V
1.000 UL
LTb
3383 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3383 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.002)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3850 420 M
0 4200 V
1.000 UL
LTb
3850 420 M
0 63 V
0 4137 R
0 -63 V
stroke
3850 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.004)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4317 420 M
0 4200 V
1.000 UL
LTb
4317 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4317 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.006)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4783 420 M
0 4137 V
0 63 V
1.000 UL
LTb
4783 420 M
0 63 V
0 4137 R
0 -63 V
stroke
4783 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.008)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5250 420 M
0 4200 V
1.000 UL
LTb
5250 420 M
0 63 V
0 4137 R
0 -63 V
stroke
5250 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1050 420 M
4200 0 V
0 4200 V
-4200 0 V
0 -4200 V
LTb
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (PT [1])]
] -46.7 MCshow
grestore
LTb
3150 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (T [m])]
] -46.7 MCshow
LTb
3150 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Synchrotron Oscillation Test)]
] -46.7 MCshow
1.000 UP
1.000 UP
1.000 UL
LT0
2907 4521 Pls
2799 4498 Pls
2551 4412 Pls
2257 4270 Pls
2060 4118 Pls
2026 3970 Pls
2077 3819 Pls
2070 3667 Pls
1925 3523 Pls
1707 3412 Pls
1557 3346 Pls
1562 3290 Pls
1668 3209 Pls
1731 3106 Pls
1655 3013 Pls
1482 2963 Pls
1351 2959 Pls
1365 2963 Pls
1491 2934 Pls
1592 2870 Pls
1556 2805 Pls
1407 2778 Pls
1276 2797 Pls
1281 2826 Pls
1410 2823 Pls
1532 2778 Pls
1526 2724 Pls
1392 2702 Pls
1256 2726 Pls
1245 2765 Pls
1368 2774 Pls
1504 2739 Pls
1523 2687 Pls
1405 2662 Pls
1263 2683 Pls
1234 2724 Pls
1346 2740 Pls
1493 2710 Pls
1535 2656 Pls
1435 2623 Pls
1291 2635 Pls
1244 2671 Pls
1345 2687 Pls
1500 2655 Pls
1568 2594 Pls
1490 2546 Pls
1350 2540 Pls
1292 2561 Pls
1383 2564 Pls
1551 2519 Pls
1649 2439 Pls
1604 2360 Pls
1480 2315 Pls
1422 2296 Pls
1517 2259 Pls
1708 2173 Pls
1855 2049 Pls
1864 1918 Pls
1782 1799 Pls
1751 1692 Pls
1874 1568 Pls
2119 1417 Pls
2350 1273 Pls
2455 1147 Pls
2452 1025 Pls
2470 903 Pls
2628 805 Pls
2922 782 Pls
3228 854 Pls
3409 977 Pls
3439 1110 Pls
3426 1240 Pls
3505 1378 Pls
3716 1530 Pls
3964 1669 Pls
4106 1777 Pls
4090 1880 Pls
4003 2000 Pls
3989 2128 Pls
4116 2238 Pls
4308 2302 Pls
4421 2322 Pls
4382 2343 Pls
4257 2398 Pls
4192 2479 Pls
4270 2548 Pls
4436 2572 Pls
4546 2555 Pls
4509 2536 Pls
4372 2556 Pls
4277 2611 Pls
4324 2664 Pls
4476 2675 Pls
4594 2644 Pls
4571 2608 Pls
4434 2608 Pls
4321 2648 Pls
4344 2693 Pls
4486 2701 Pls
4615 2665 Pls
4612 2618 Pls
4484 2603 Pls
4359 2631 Pls
4361 2669 Pls
4495 2675 Pls
4637 2633 Pls
4659 2574 Pls
4547 2540 Pls
4418 2549 Pls
4406 2573 Pls
4534 2567 Pls
4694 2510 Pls
4748 2429 Pls
4663 2363 Pls
4542 2334 Pls
4527 2321 Pls
4662 2276 Pls
4852 2181 Pls
4955 2057 Pls
4920 1933 Pls
1.000 UP
1.000 UL
LT1
2911 3856 Crs
2842 3841 Crs
2685 3785 Crs
2499 3680 Crs
2376 3548 Crs
2357 3409 Crs
2397 3275 Crs
2405 3145 Crs
2333 3007 Crs
2215 2857 Crs
2143 2705 Crs
2175 2552 Crs
2285 2404 Crs
2385 2267 Crs
2408 2136 Crs
2371 2001 Crs
2355 1863 Crs
2436 1732 Crs
2606 1631 Crs
2786 1579 Crs
2893 1566 Crs
2916 1565 Crs
2924 1566 Crs
3001 1583 Crs
3164 1644 Crs
3348 1752 Crs
3463 1885 Crs
3474 2024 Crs
3433 2157 Crs
3431 2288 Crs
3510 2427 Crs
3628 2577 Crs
3692 2729 Crs
3651 2882 Crs
3538 3030 Crs
3443 3166 Crs
3427 3296 Crs
3467 3432 Crs
3476 3570 Crs
3386 3700 Crs
3211 3797 Crs
3035 3845 Crs
2937 3856 Crs
2918 3856 Crs
2907 3856 Crs
2822 3836 Crs
2653 3771 Crs
2472 3660 Crs
2366 3525 Crs
2363 3387 Crs
2404 3254 Crs
2399 3124 Crs
2313 2983 Crs
2196 2833 Crs
2140 2680 Crs
2191 2528 Crs
2306 2381 Crs
2395 2246 Crs
2403 2115 Crs
2362 1979 Crs
2360 1840 Crs
2460 1713 Crs
2639 1619 Crs
2810 1575 Crs
2900 1566 Crs
2914 1565 Crs
2929 1566 Crs
3023 1589 Crs
3196 1658 Crs
3374 1772 Crs
3471 1908 Crs
3466 2046 Crs
3426 2178 Crs
3438 2309 Crs
3530 2450 Crs
3645 2601 Crs
3693 2754 Crs
3634 2906 Crs
3518 3052 Crs
3435 3186 Crs
3433 3317 Crs
3475 3454 Crs
3469 3592 Crs
3360 3718 Crs
3178 3808 Crs
3012 3848 Crs
2931 3856 Crs
2920 3857 Crs
2900 3855 Crs
2798 3829 Crs
2621 3756 Crs
2447 3639 Crs
2360 3503 Crs
2371 3365 Crs
2409 3234 Crs
2390 3102 Crs
2292 2960 Crs
2180 2808 Crs
2141 2656 Crs
2208 2504 Crs
2325 2359 Crs
2402 2225 Crs
2396 2094 Crs
2355 1956 Crs
2369 1818 Crs
2486 1694 Crs
2671 1609 Crs
2831 1573 Crs
2904 1566 Crs
2912 1565 Crs
2937 1567 Crs
3048 1596 Crs
3229 1674 Crs
3398 1793 Crs
3475 1930 Crs
3458 2067 Crs
3422 2198 Crs
3449 2330 Crs
3552 2474 Crs
3661 2626 Crs
1.000 UP
1.000 UL
LT2
2913 3474 Star
2867 3464 Star
2763 3426 Star
2638 3353 Star
2556 3255 Star
2544 3150 Star
2573 3050 Star
2583 2955 Star
2539 2853 Star
2466 2736 Star
2423 2609 Star
2451 2483 Star
2534 2371 Star
2615 2280 Star
2646 2200 Star
2634 2118 Star
2632 2034 Star
2691 1961 Star
2810 1919 Star
2938 1916 Star
3017 1943 Star
3035 1979 Star
3035 2014 Star
3075 2058 Star
3171 2125 Star
3283 2222 Star
3351 2338 Star
3347 2455 Star
3302 2565 Star
3277 2667 Star
3304 2772 Star
3360 2889 Star
3384 3012 Star
3338 3131 Star
3238 3230 Star
3143 3303 Star
3100 3360 Star
3101 3415 Star
3093 3470 Star
3027 3510 Star
2903 3517 Star
2776 3482 Star
2701 3421 Star
2689 3353 Star
2697 3288 Star
2667 3217 Star
2584 3128 Star
2487 3016 Star
2436 2891 Star
2458 2767 Star
2520 2654 Star
2562 2552 Star
2550 2451 Star
2511 2341 Star
2504 2227 Star
2567 2123 Star
2681 2045 Star
2787 1999 Star
2840 1973 Star
2845 1951 Star
2858 1931 Star
2926 1927 Star
3048 1957 Star
3170 2024 Star
3236 2114 Star
3237 2207 Star
3217 2294 Star
3233 2383 Star
3302 2486 Star
3382 2606 Star
3414 2734 Star
3373 2859 Star
3294 2969 Star
3236 3063 Star
3233 3153 Star
3256 3249 Star
3248 3345 Star
3172 3427 Star
3047 3477 Star
2933 3489 Star
2877 3479 Star
2869 3465 Star
2857 3448 Star
2793 3417 Star
2678 3355 Star
2567 3262 Star
2514 3152 Star
2528 3043 Star
2563 2941 Star
2562 2842 Star
2509 2733 Star
2447 2612 Star
2433 2485 Star
2492 2365 Star
2588 2265 Star
2661 2186 Star
2678 2116 Star
2667 2043 Star
2687 1971 Star
2773 1920 Star
2904 1905 Star
3020 1929 Star
3075 1975 Star
3078 2025 Star
3084 2074 Star
3140 2135 Star
3243 2222 Star
3340 2333 Star
3377 2455 Star
3346 2573 Star
3294 2681 Star
3280 2783 Star
3316 2891 Star
3361 3008 Star
3356 3128 Star
3280 3236 Star
3169 3318 Star
3084 3373 Star
3056 3416 Star
3058 3459 Star
1.000 UL
LTb
1050 420 M
4200 0 V
0 4200 V
-4200 0 V
0 -4200 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
